const DATA_SOURCES={items:items,bows:bows,arrows:arrows,tableList:tableList};function formatNumber(e){return e.toString().replace(/\B(?=(\d{3})+(?!\d))/g,",")}function parseForSorting(e){const t=parseFloat(e);return isNaN(t)?"string"==typeof e?e.toLowerCase():e||0:t}const TABLE_CONFIGS={default:{dataSource:{source:"items",filter:(e,t)=>{const n=e.type&&e.type.includes("Equipment-")?e.type.split("Equipment-")[1]:e.type;return n&&n.toLowerCase()===t.toLowerCase()&&!TABLE_CONFIGS[n.toLowerCase()]}},columns:[{header:"Item",width:"25%",source:"items",field:"name",render:e=>`\n            <div class="item-container font-medium w-full">\n                <img src="drawable/${e.icon}.png" alt="${e.name}" class="w-12 h-12 mr-2">\n                <div align="center" class="text-center w-full">\n                    ${e.name}\n                    ${"Common"!==e.rarity?`<div class="ml-2 text-sm text-gray-500">(${e.rarity})</div>`:""}\n                </div>\n            </div>\n          `},{header:"Attack",width:"8%",align:"center",source:"items",field:"attackBonus"},{header:"Strength",width:"8%",align:"center",source:"items",field:"strengthBonus"},{header:"Defence",width:"8%",align:"center",source:"items",field:"defenceBonus"},{header:"Health",width:"8%",align:"center",source:"items",field:"healthBonus"},{header:"Details",width:"33%",source:"items",domSortSelector:".sortval",render:e=>{const t=parseInt(e.value)||0;return`\n              <div>\n                ${e.description&&"null"!==e.description?`<span class="text-gray-300">\n                        ${e.description}\n                       </span>`:""}\n                ${t>0?`<div class="text-sm text-gray-500">\n                         Value: \n                         <span \n                            class="sortval" \n                            data-sort-val="${t}"\n                         >\n                            ${formatNumber(t)}\n                         </span>\n                       </div>`:""}\n              </div>\n            `}}]},weapon:{dataSource:{source:"items",filter:e=>{if(e.type&&e.type.toLowerCase().includes("equipment-weapon")){return!bows.some((t=>t.name===e.name))}return!1}},columns:[{header:"Item",width:"25%",source:"items",field:"name",render:e=>`\n            <div class="item-container font-medium w-full">\n                <img src="drawable/${e.icon}.png" alt="${e.name}" class="w-12 h-12 mr-2">\n                <div align="center" class="text-center w-full">\n                    ${e.name}\n                    ${"Common"!==e.rarity?`<div class="ml-2 text-sm text-gray-500">(${e.rarity})</div>`:""}\n                </div>\n            </div>\n          `},{header:"Attack",width:"8%",align:"center",source:"items",field:"attackBonus"},{header:"Strength",width:"8%",align:"center",source:"items",field:"strengthBonus"},{header:"Defence",width:"8%",align:"center",source:"items",field:"defenceBonus"},{header:"Health",width:"8%",align:"center",source:"items",field:"healthBonus"},{header:"Details",width:"33%",source:"items",domSortSelector:".sortval",render:e=>{const t=parseInt(e.value)||0;return`\n              ${e.description&&"null"!==e.description?`<span class="text-gray-300">\n                      ${e.description}\n                     </span>`:""}\n              <div>\n                ${t>0?`<div class="text-sm text-gray-500">\n                         Value: \n                         <span\n                           class="sortval" \n                           data-sort-val="${t}"\n                         >\n                           ${formatNumber(t)}\n                         </span>\n                       </div>`:""}\n              </div>\n            `}}]},bow:{dataSource:{source:"bows",filter:()=>!0},columns:[{header:"Bow",width:"20%",source:"items",render:e=>`\n            <div class="item-container font-medium w-full">\n                <img src="drawable/${e.icon}.png" alt="${e.name}" class="w-12 h-12 mr-2">\n                <div align="center" class="text-center w-full">\n                    ${e.name}\n                    ${"Common"!==e.rarity?`<div class="ml-2 text-sm text-gray-500">(${e.rarity})</div>`:""}\n                </div>\n            </div>\n          `},{header:"Speed",width:"20%",align:"center",source:"bows",field:"speed"},{header:"Damage",width:"20%",align:"center",source:"bows",field:"damage"},{header:"Accuracy",width:"20%",align:"center",source:"bows",field:"accuracy"},{header:"Crit Chance",width:"20%",align:"center",source:"bows",field:"critChance"}]},arrows:{dataSource:{source:"arrows",filter:()=>!0},columns:[{header:"Arrows",width:"33%",source:"items",render:e=>`\n            <div class="item-container font-medium w-full">\n                <img src="drawable/${e.icon}.png" alt="${e.name}" class="w-12 h-12 mr-2">\n                <div align="center" class="text-center w-full">\n                    ${e.name}\n                    ${"Common"!==e.rarity?`<div class="ml-2 text-sm text-gray-500">(${e.rarity})</div>`:""}\n                </div>\n            </div>\n          `},{header:"Damage",width:"33%",align:"center",source:"arrows",field:"damage"},{header:"Details",width:"33%",source:"items",domSortSelector:".sortval",render:e=>{const t=parseInt(e.value)||0;return`\n              ${e.description&&"null"!==e.description?`<span class="text-gray-300">\n                       ${e.description}\n                     </span>`:""}\n              <div>\n                ${t>0?`<div class="text-sm text-gray-500">\n                         Value: \n                         <span\n                           class="sortval" \n                           data-sort-val="${t}"\n                         >\n                           ${formatNumber(t)}\n                         </span>\n                       </div>`:""}\n              </div>\n            `}}]}};class TableGenerator{constructor(){this.sortStates={}}getFilteredData(e,t){const n=e.dataSource;if(!n||!DATA_SOURCES[n.source])return[];const r=DATA_SOURCES[n.source];return"function"==typeof n.filter?r.filter((e=>n.filter(e,t))):r}getSortedData(e,t,n,r){if(-1===n.column)return e;const a=t.columns[n.column];if(!a)return e;if(a.field&&!a.domSortSelector)return[...e].sort(((e,t)=>{const r=parseForSorting(e[a.field]),s=parseForSorting(t[a.field]);return r<s?"asc"===n.direction?-1:1:r>s?"asc"===n.direction?1:-1:0}));if(a.domSortSelector&&r){const t=Array.from(r.querySelectorAll("tbody tr")),s=t.map((e=>{const t=e.querySelectorAll("td")[n.column];if(!t)return{row:e,sortValue:""};let r="";const s=t.querySelector(a.domSortSelector);if(s){const e=s.getAttribute("data-sort-val");r=parseForSorting(e||s.textContent)}return{row:e,sortValue:r}}));s.sort(((e,t)=>e.sortValue<t.sortValue?"asc"===n.direction?-1:1:e.sortValue>t.sortValue?"asc"===n.direction?1:-1:0));const o=r.querySelector("tbody");return s.forEach((e=>o.appendChild(e.row))),s.map((n=>e[t.indexOf(n.row)]))}return e}generateTable(e){const t=e.toLowerCase(),n=TABLE_CONFIGS[t]||TABLE_CONFIGS.default,r=this.sortStates[t]||{column:-1,direction:""};this.sortStates[t]=r;const a=this.getFilteredData(n,t),s=document.createElement("div");s.className="table-responsive";const o=`${t}-table`;return s.innerHTML=`\n        <table class="w-full border-collapse" id="${o}">\n          <thead>\n            <tr class="bg-gray-50">\n              ${this.generateHeaders(n,r)}\n            </tr>\n          </thead>\n          <tbody>\n            ${this.generateRows(n,a,r)}\n          </tbody>\n        </table>\n      `,this.attachSortHandlers(s,t,n),s}generateHeaders(e,t){return e.columns.map(((e,n)=>{let r="";return t.column===n&&(r="asc"===t.direction?" ↑":" ↓"),`\n            <th class="p-3 text-left border cursor-pointer" style="width: ${e.width}">\n              ${e.header}${r}\n            </th>\n          `})).join("")}generateRows(e,t,n){return this.getSortedData(t,e,n,null).map((t=>`<tr class="hover:bg-gray-50">${e.columns.map((n=>this.generateCell(n,t,e))).join("")}</tr>`)).join("")}generateCell(e,t,n){if(e.source&&e.source!==n.dataSource?.source){const n=DATA_SOURCES[e.source];if(n){const e=n.find((e=>e.name===t.name));e&&(t=e)}}if(e.render)return`<td class="p-3 border ${"center"===e.align?"text-center":""}">\n          ${e.render(t)}\n        </td>`;const r=e.field?t[e.field]:t.name;return`<td class="p-3 border ${"center"===e.align?"text-center":""}">\n        ${"number"==typeof r?formatNumber(r):r??""}\n      </td>`}attachSortHandlers(e,t,n){e.querySelector("table").querySelectorAll("th").forEach(((r,a)=>{r.addEventListener("click",(()=>{this.handleSort(t,a),this.updateTableBody(e,t,n),this.updateSortIndicators(e,n,t)}))}))}handleSort(e,t){this.sortStates[e]||(this.sortStates[e]={column:-1,direction:""});const n=this.sortStates[e];n.column===t?"desc"===n.direction?n.direction="asc":"asc"===n.direction&&(n.column=-1,n.direction=""):(n.column=t,n.direction="desc")}updateTableBody(e,t,n){const r=e.querySelector("table"),a=this.sortStates[t]||{column:-1,direction:""},s=this.getFilteredData(n,t),o=this.getSortedData(s,n,a,r),i=n.columns[a.column];i&&!i.domSortSelector&&(r.querySelector("tbody").innerHTML=o.map((e=>`<tr class="hover:bg-gray-50">${n.columns.map((t=>this.generateCell(t,e,n))).join("")}</tr>`)).join(""))}updateSortIndicators(e,t,n){const r=this.sortStates[n]||{column:-1,direction:""};e.querySelector("table").querySelectorAll("th").forEach(((e,n)=>{let a="";r.column===n&&(a="asc"===r.direction?" ↑":" ↓"),e.innerHTML=`${t.columns[n].header}${a}`}))}}const tableGen=new TableGenerator;function toggleSection(e){const t=document.getElementById(`section-${e.toLowerCase()}-content`),n=document.querySelector(`[data-section="${e}"]`);t.classList.contains("expanded")?(t.classList.remove("expanded"),n.classList.add("collapsed")):(t.classList.add("expanded"),n.classList.remove("collapsed"))}function populateTables(){const e=document.getElementById("sections");e.innerHTML="";const t=new Set(Object.keys(TABLE_CONFIGS)),n=new Map;items.forEach((e=>{let r=e.type&&e.type.includes("Equipment-")?e.type.split("Equipment-")[1]:e.type;r&&(r=r.toLowerCase(),t.has(r)||n.has(r)||n.set(r,{type:r,config:TABLE_CONFIGS.default}))})),Object.keys(TABLE_CONFIGS).forEach((e=>{"default"!==e&&n.set(e.toLowerCase(),{type:e,config:TABLE_CONFIGS[e]})}));Array.from(n.values()).sort(((e,t)=>e.type.localeCompare(t.type))).forEach((({type:t,config:n})=>{const r=document.createElement("div");r.className="section";const a=document.createElement("button");a.className="section-button collapsed",a.onclick=()=>toggleSection(t),a.setAttribute("data-section",t),a.textContent="null"===t.toLowerCase()?"Miscellaneous":t.toTitleCase();const s=document.createElement("div");s.id=`section-${t.toLowerCase()}-content`,s.className="section-content";const o=tableGen.generateTable(t);s.appendChild(o),r.appendChild(a),r.appendChild(s),e.appendChild(r)}))}String.prototype.toTitleCase=function(){return this.replace(/\w\S*/g,(function(e){return e.charAt(0).toUpperCase()+e.substr(1).toLowerCase()}))},document.addEventListener("DOMContentLoaded",populateTables);